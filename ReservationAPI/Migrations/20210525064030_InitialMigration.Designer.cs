// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservationAPI.Data;

namespace ReservationAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210525064030_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReservationAPI.Model.MenuItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Reservationid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Reservationid");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Name = "Salad",
                            Price = 5.0
                        },
                        new
                        {
                            id = 2,
                            Name = "Salmon",
                            Price = 25.0
                        },
                        new
                        {
                            id = 3,
                            Name = "Mango shake",
                            Price = 5.0
                        },
                        new
                        {
                            id = 4,
                            Name = "Shawarma",
                            Price = 12.0
                        },
                        new
                        {
                            id = 5,
                            Name = "Burger steak",
                            Price = 7.0
                        });
                });

            modelBuilder.Entity("ReservationAPI.Model.Reservation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Date = new DateTime(2021, 5, 25, 1, 40, 29, 544, DateTimeKind.Local).AddTicks(9355),
                            Name = "Enzo"
                        },
                        new
                        {
                            id = 2,
                            Date = new DateTime(2021, 5, 25, 1, 40, 29, 551, DateTimeKind.Local).AddTicks(4370),
                            Name = "Aaliyah"
                        },
                        new
                        {
                            id = 3,
                            Date = new DateTime(2021, 5, 25, 1, 40, 29, 551, DateTimeKind.Local).AddTicks(4436),
                            Name = "Joemarie"
                        });
                });

            modelBuilder.Entity("ReservationAPI.Model.ReservationMenuItems", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationMenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MenuItemId = 1,
                            ReservationId = 1
                        });
                });

            modelBuilder.Entity("ReservationAPI.Model.MenuItem", b =>
                {
                    b.HasOne("ReservationAPI.Model.Reservation", null)
                        .WithMany("MenuItems")
                        .HasForeignKey("Reservationid");
                });

            modelBuilder.Entity("ReservationAPI.Model.ReservationMenuItems", b =>
                {
                    b.HasOne("ReservationAPI.Model.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservationAPI.Model.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("ReservationAPI.Model.Reservation", b =>
                {
                    b.Navigation("MenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
